#include <stdio.h>
#include <math.h>
#include <iostream>
#include <locale.h>

using namespace std;

#define P -3
#define M 0.03
#define H 1
#define EJ 10000

void umn1(double*, double*, double*, int, int, int);
void umn2(double*, double*, int, int, double);
void pechat(double*, int, int);

void main()
{
	setlocale(LC_ALL, "rus");
	int i, j, k, p, n = 13;
	double d, s;
	double a[13][13] = {
						 { -1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						 { 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
						 { 1, -4, 6, -4, 1, 0, 0, 0, 0, 0, 0, 0, 0},
						 { 0, 1, -4, 6, -4, 1, 0, 0, 0, 0, 0, 0, 0},
						 { 0, 0, 1, -4, 6, -4, 1, 0, 0, 0, 0, 0, 0},
						 { 0, 0, 0, 1, -4, 6, -4, 1, 0, 0, 0, 0, 0},
						 { 0, 0, 0, 0, 1, -4, 6, -4, 1, 0, 0, 0, 0},
						 { 0, 0, 0, 0, 0, 1, -4, 6, -4, 1, 0, 0, 0},
						 { 0, 0, 0, 0, 0, 0, 1, -4, 6, -4, 1, 0, 0},
						 { 0, 0, 0, 0, 0, 0, 0, 1, -4, 6, -4, 1, 0},
						 { 0, 0, 0, 0, 0, 0, 0, 0, 1, -4, 6, -4, 1},
						 { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, -2, 1},
						 { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0},
	},
	b[13][13] = {
		         { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
				 { 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
				 { 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
				 { 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0},
				 { 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0},
				 { 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0},
				 { 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0},
				 { 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0},
				 { 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0},
				 { 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0},
				 { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0},
				 { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0},
				 { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1},

	},
		x1[13][13] = {
			{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
			{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
			{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
			{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
			{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
			{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
			{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
			{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
			{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
			{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
			{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
			{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
			{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
	},
		m[11][13] = { 
			        { 1, -2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
					{ 0, 1, -2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0},
					{ 0, 0, 1, -2, 1, 0, 0, 0, 0, 0, 0, 0, 0},
					{ 0, 0, 0, 1, -2, 1, 0, 0, 0, 0, 0, 0, 0},
					{ 0, 0, 0, 0, 1, -2, 1, 0, 0, 0, 0, 0, 0},
					{ 0, 0, 0, 0, 0, 1, -2, 1, 0, 0, 0, 0, 0},
					{ 0, 0, 0, 0, 0, 0, 1, -2, 1, 0, 0, 0, 0},
					{ 0, 0, 0, 0, 0, 0, 0, 1, -2, 1, 0, 0, 0},
					{ 0, 0, 0, 0, 0, 0, 0, 0, 1, -2, 1, 0, 0},
					{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, -2, 1, 0},
					{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, -2, 1},
	},

		f[11][13] = {
					{ -1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
					{ 0, -1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0},
					{ 0, 0, -1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0},
					{ 0, 0, 0, -1, 0, 1, 0, 0, 0, 0, 0, 0, 0},
					{ 0, 0, 0, 0, -1, 0, 1, 0, 0, 0, 0, 0, 0},
					{ 0, 0, 0, 0, 0, -1, 0, 1, 0, 0, 0, 0, 0},
					{ 0, 0, 0, 0, 0, 0, -1, 0, 1, 0, 0, 0, 0},
					{ 0, 0, 0, 0, 0, 0, 0, -1, 0, 1, 0, 0, 0},
					{ 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 1, 0, 0},
					{ 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 1, 0},
					{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 1},
	},
		x[11] = { 0, 1, 2, 3, 4, 4.5, 6, 7, 8, 9, 10},
		e[13] = { 0, 0, 0, 0, 0, 0, P * pow(H,4) / EJ, 0, 0, 0, M * pow(H,2) / EJ, 0, 0},
		v[13] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
		m1[11] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
		f1[11] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};

	for (k = 0; k < n; k++)
	{
		for (j = k + 1; j < n; j++)
		{
			d = a[j][k] / a[k][k];
			for (i = 0; i < n; i++)
			{
				a[j][i] = a[j][i] - d * a[k][i];

				b[j][i] = b[j][i] - d * b[k][i];
			}
		}
	}

	for (p = 0; p < n; p++)
	{
		for (k = n - 1; k >= 0; k--)
		{
			d = 0;
			for (j = n - 1; j >= 0; j--)
			{
				s = a[k][j] * x1[j][p];
				d += s;
			}
			x1[k][p] = (b[k][p] - d) / a[k][k];
		}
	}

	umn1(&x1[0][0], &e[0], v, 13, 1, 13);

	umn1(&m[0][0], &v[0], m1, 11, 1, 13);
	umn2(&m1[0], &m1[0], 11, 1, pow(H, 2));

	umn1(&f[0][0], &v[0], f1, 11, 1, 13);
	umn2(&f1[0], &f1[0], 11, 1, 2 * H);

	cout << "Вектор перемещений\n";
	pechat(&v[0], 13, 1);
	cout << "Вектор моментов\n";
	pechat(&m1[0], 11, 1);
	cout << "Вектор углов\n";
	pechat(&f1[0], 11, 1);

}

void umn1(double* x, double* y, double* z, int n, int m, int k)
{
	int i, j, h;
	for (i = 0; i < n; i++)
	{
		for (j = 0; j < m; j++)
		{
			z[i * m + j] = 0;
			for (h = 0; h < k; h++)
			{
				z[i * m + j] += x[i * k + h] * y[h * m + j];
			}
		}
	}
}

void umn2(double* x, double* y, int n, int m, double k)
{
	int i, j;
	for (i = 0; i < n; i++)
	{
		for (j = 0; j < m; j++)
		{
			y[i * m + j] = x[i * m + j] * k;
		}
	}
}

void pechat(double* x, int n, int m)
{
	int i, j;
	for (i = 0; i < n; i++)
	{
		for (j = 0; j < m; j++)
		{
			printf("\t%0.5f", x[i * m + j]);
		}
		cout << "\n";
	}
}